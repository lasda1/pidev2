{% extends "base.html.twig" %}
{% block pageName %}
    Co-Voiturage
{% endblock %}
{% block body %}

    <input id="pac-input" class="controls" type="text"
           placeholder="Enter a location">



        <div style="height: 400px; width: 600px;" id="map"></div>


<form role="form">
    <div class="modal-body">
        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    <label>Départ</label>
                    <input id="start" name="depart" type="text" placeholder="Entrez la zone de départ" class="form-control">
                </div>
                <div class="form-group">
                    <label>Destination</label>
                    <input id="end" name="destination" type="text" placeholder="Entrez la zone de Destination" class="form-control">
                </div>

                <div class="form-group">
                    <label>Quotidiennement</label>
                    <div class="switch-button switch-button-info" style="margin-left: 10px;">
                        <input name="onetime" id="swt6" type="checkbox" />
                        <span>
                                            <label for="swt6"></label>
                                        </span>
                    </div>
                </div>

                <div style="display: none" id="jours" class="form-group">
                    <label class="control-label">Les jours</label>
                    <div class="am-checkbox">
                        <input name="lundi" id="lundi" type="checkbox">
                        <label for="lundi">Lundi</label>

                        <input name="mardi" id="mardi" type="checkbox">
                        <label for="mardi">Mardi</label>

                        <input name="mercredi" id="mercredi" type="checkbox">
                        <label for="mercredi">Mercredi</label>
                    </div>
                    <div class="am-checkbox">
                        <input name="jeudi" id="jeudi" type="checkbox">
                        <label for="jeudi">Jeudi</label>

                        <input name="vendredi" id="vendredi" type="checkbox">
                        <label for="vendredi">Vendredi</label>

                        <input name="samedi" id="samedi" type="checkbox">
                        <label for="samedi">Samedi</label>
                    </div>
                </div>

                <div id="dateheure" class="form-group">
                    <label>Date et heure</label>
                    <div data-date-format="yyyy-mm-dd - HH:ii" data-link-field="dtp_input1" class="input-group date datetimepicker">
                        <input name="date" size="16" value="" readonly="" class="form-control" type="text"><span class="input-group-addon btn btn-primary"><i class="icon-th s7-date"></i></span>
                    </div>
                </div>

            </div>



        </div>
    </div>
        <button type="button" data-dismiss="modal" class="btn btn-default">Cancel</button>
        <button type="submit" data-dismiss="modal" class="btn btn-info">Proceed</button>
</form>

{% endblock %}


{% block customScript %}
    <script>
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                mapTypeControl: false,
                center: {lat: -33.8688, lng: 151.2195},
                zoom: 13
            }),displayer = new google.maps.DirectionsRenderer({
                draggable: true
            });

            new AutocompleteDirectionsHandler(map);
        }

        function AutocompleteDirectionsHandler(map) {
            this.map = map;
            this.originPlaceId = null;
            this.destinationPlaceId = null;
            this.travelMode = 'DRIVING';
            var originInput = document.getElementById('start');
            var destinationInput = document.getElementById('end');
            var modeSelector = 'DRIVING';
            this.directionsService = new google.maps.DirectionsService;
            this.directionsDisplay = new google.maps.DirectionsRenderer;
            this.directionsDisplay.setMap(map);

            var originAutocomplete = new google.maps.places.Autocomplete(
                originInput, {placeIdOnly: true});
            var destinationAutocomplete = new google.maps.places.Autocomplete(
                destinationInput, {placeIdOnly: true});

            /*this.setupClickListener('changemode-walking', 'WALKING');
            this.setupClickListener('changemode-transit', 'TRANSIT');*/
            //this.setupClickListener('changemode-driving', 'DRIVING');

            this.setupPlaceChangedListener(originAutocomplete, 'ORIG');
            this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');

            //this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);
            //this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(destinationInput);
            //this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(modeSelector);
        }



        AutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function(autocomplete, mode) {
            var me = this;
            autocomplete.bindTo('bounds', this.map);
            autocomplete.addListener('place_changed', function() {
                var place = autocomplete.getPlace();
                if (!place.place_id) {
                    window.alert("Please select an option from the dropdown list.");
                    return;
                }
                if (mode === 'ORIG') {
                    me.originPlaceId = place.place_id;
                } else {
                    me.destinationPlaceId = place.place_id;
                }
                me.route();
            });

        };

        AutocompleteDirectionsHandler.prototype.route = function() {
            if (!this.originPlaceId || !this.destinationPlaceId) {
                return;
            }
            var me = this;

            this.directionsService.route({
                origin: {'placeId': this.originPlaceId},
                destination: {'placeId': this.destinationPlaceId},
                travelMode: 'DRIVING'
            }, function(response, status) {
                if (status === 'OK') {
                    me.directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
        };



        



    </script>


    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA8w507O9U90-M_IIeytsa4weIBO_yAjhI&libraries=places&callback=initMap"
            async defer></script>





{% endblock %}
